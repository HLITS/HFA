[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u000b\",\"|\")", # replace invisible character u000b with vertical pipe
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u000b\",\"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HOLLIS record created by S. Pierce",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HOLLIS record created by S. Pierce using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Original Titles",
    "expression": "grel:if(isNonBlank(cells[\"prefix\"].value),(cells[\"prefix\"].value)+\" \"+value,value)",
    "onError": "set-to-blank",
    "newColumnName": "245",
    "columnInsertIndex": 25,
    "description": "Create column 245 at index 25 based on column Original Titles using expression grel:if(isNonBlank(cells[\"prefix\"].value),(cells[\"prefix\"].value)+\" \"+value,value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Aspect Ratio",
    "expression": "grel:if(isNonBlank(value),\"Aspect ratio: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "500 (aspect ratio)",
    "columnInsertIndex": 3,
    "description": "Create column 500 (aspect ratio) at index 3 based on column Aspect Ratio using expression grel:if(isNonBlank(value),\"Aspect ratio: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Director",
    "expression": "grel:if(isNonBlank(value),\"Director: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (director)",
    "columnInsertIndex": 9,
    "description": "Create column 508 (director) at index 9 based on column Director using expression grel:if(isNonBlank(value),\"Director: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Director 2",
    "expression": "grel:if(isNonBlank(value),\"Director: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (director 2)",
    "columnInsertIndex": 11,
    "description": "Create column 508 (director 2) at index 11 based on column Director 2 using expression grel:if(isNonBlank(value),\"Director: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "DP/Cinematographer",
    "expression": "grel:if(isNonBlank(value),\"Director of photography: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (DP)",
    "columnInsertIndex": 13,
    "description": "Create column 508 (DP) at index 13 based on column DP/Cinematographer using expression grel:if(isNonBlank(value),\"Director of photography: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Editor",
    "expression": "grel:if(isNonBlank(value),\"Editor: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (editor)",
    "columnInsertIndex": 16,
    "description": "Create column 508 (editor) at index 16 based on column Editor using expression grel:if(isNonBlank(value),\"Editor: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Element",
    "expression": "grel:if(isNonBlank(value),\"Generation: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "500 (generation)",
    "columnInsertIndex": 18,
    "description": "Create column 500 (generation) at index 18 based on column Element using expression grel:if(isNonBlank(value),\"Generation: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Music",
    "expression": "grel:if(isNonBlank(value),\"Music score: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (music)",
    "columnInsertIndex": 29,
    "description": "Create column 508 (music) at index 29 based on column Music using expression grel:if(isNonBlank(value),\"Music score: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Producer",
    "expression": "grel:if(isNonBlank(value),\"Producer: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (producer)",
    "columnInsertIndex": 40,
    "description": "Create column 508 (producer) at index 40 based on column Producer using expression grel:if(isNonBlank(value),\"Producer: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Script",
    "expression": "grel:if(isNonBlank(value),\"Screenwriter: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (script)",
    "columnInsertIndex": 45,
    "description": "Create column 508 (script) at index 45 based on column Script using expression grel:if(isNonBlank(value),\"Screenwriter: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Subtitles",
    "expression": "grel:if(isNonBlank(value),\"Subtitles: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "546 (subtitles)",
    "columnInsertIndex": 48,
    "description": "Create column 546 (subtitles) at index 48 based on column Subtitles using expression grel:if(isNonBlank(value),\"Subtitles: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sound Aspect(s)",
    "expression": "grel:if((not(value.contains(\"Silent\"))),\"analog$2rdatr\",value)",
    "onError": "set-to-blank",
    "newColumnName": "344",
    "columnInsertIndex": 47,
    "description": "Create column 344 at index 47 based on column Sound Aspect(s) using expression grel:if((not(value.contains(\"Silent\"))),\"analog$2rdatr\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "HFA Time",
    "expression": "grel:if(isNonBlank(value),value,cells[\"Running Time {Length}\"].value)",
    "onError": "set-to-blank",
    "newColumnName": "Unified running time",
    "columnInsertIndex": 24,
    "description": "Create column Unified running time at index 24 based on column HFA Time using expression grel:if(isNonBlank(value),value,cells[\"Running Time {Length}\"].value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Unified running time",
    "expression": "grel:\"000\"[0,3-value.length()]+value",
    "onError": "set-to-blank",
    "newColumnName": "008 runtime",
    "columnInsertIndex": 25,
    "description": "Create column 008 runtime at index 25 based on column Unified running time using expression grel:\"000\"[0,3-value.length()]+value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "008 runtime",
    "expression": "grel:if(isBlank(value),\"---\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 008 runtime using expression grel:if(isBlank(value),\"---\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Reels",
    "expression": "grel:if(isNonBlank(value),value+\" \",\"\")+\"film reels\"",
    "onError": "set-to-blank",
    "newColumnName": "300 reels",
    "columnInsertIndex": 42,
    "description": "Create column 300 reels at index 42 based on column Reels using expression grel:if(isNonBlank(value),value+\" \",\"\")+\"film reels\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "300 reels",
    "expression": "grel:value.replace(\"1 film reels\",\"1 film reel\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 reels using expression grel:value.replace(\"1 film reels\",\"1 film reel\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Unified running time",
    "expression": "grel:if(isNonBlank(value),value+\" minutes\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300 runtime",
    "columnInsertIndex": 25,
    "description": "Create column 300 runtime at index 25 based on column Unified running time using expression grel:if(isNonBlank(value),value+\" minutes\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Footage Length",
    "expression": "grel:if(isNonBlank(value),value+\" feet\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300 footage",
    "columnInsertIndex": 20,
    "description": "Create column 300 footage at index 20 based on column Footage Length using expression grel:if(isNonBlank(value),value+\" feet\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "300 reels",
    "expression": "grel:value+\" (\"+if(isNonBlank(cells[\"300 runtime\"].value),cells[\"300 runtime\"].value,\"\")+\", \"+if(isNonBlank(cells[\"300 footage\"].value),cells[\"300 footage\"].value,\"\")+\")\"",
    "onError": "set-to-blank",
    "newColumnName": "300 $a",
    "columnInsertIndex": 45,
    "description": "Create column 300 $a at index 45 based on column 300 reels using expression grel:value+\" (\"+if(isNonBlank(cells[\"300 runtime\"].value),cells[\"300 runtime\"].value,\"\")+\", \"+if(isNonBlank(cells[\"300 footage\"].value),cells[\"300 footage\"].value,\"\")+\")\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "300 $a",
    "expression": "grel:value.replace(\"(, )\",\"\").replace(\"(, \",\"(\").replace(\", )\",\")\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 $a using expression grel:value.replace(\"(, )\",\"\").replace(\"(, \",\"(\").replace(\", )\",\")\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Running Time {Length}",
    "expression": "grel:if (value==cells[\"Unified running time\"].value, null, \"Original running time: \"+value+\" minutes.\")",
    "onError": "set-to-blank",
    "newColumnName": "500 (runtime)",
    "columnInsertIndex": 48,
    "description": "Create column 500 (runtime) at index 48 based on column Running Time {Length} using expression grel:if (value==cells[\"Unified running time\"].value, null, \"Original running time: \"+value+\" minutes.\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Item number",
    "expression": "grel:\"(HFAfm)\"+value",
    "onError": "set-to-blank",
    "newColumnName": "035",
    "columnInsertIndex": 30,
    "description": "Create column 035 at index 30 based on column Item number using expression grel:\"(HFAfm)\"+value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Collection Title",
    "expression": "grel:if(isNonBlank(value),value+\".$5hfa\",value)",
    "onError": "set-to-blank",
    "newColumnName": "740",
    "columnInsertIndex": 6,
    "description": "Create column 740 at index 6 based on column Collection Title using expression grel:if(isNonBlank(value),value+\".$5hfa\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "344",
    "expression": "grel:value.replace(\"Silent\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 344 using expression grel:value.replace(\"Silent\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "344",
    "expression": "grel:if(isNonBlank(value),\"sound\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300$b sound",
    "columnInsertIndex": 57,
    "description": "Create column 300$b sound at index 57 based on column 344 using expression grel:if(isNonBlank(value),\"sound\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "B/W-Color",
    "expression": "grel:if(value.contains(\"olor\"),\"color\",if(value.contains(\"B/W\"),\"black and white\",\"\"))",
    "onError": "set-to-blank",
    "newColumnName": "300$b color",
    "columnInsertIndex": 5,
    "description": "Create column 300$b color at index 5 based on column B/W-Color using expression grel:if(value.contains(\"olor\"),\"color\",if(value.contains(\"B/W\"),\"black and white\",\"\"))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "300$b sound",
    "expression": "grel:if(isNonBlank(value), value + \", \" + cells[\"300$b color\"].value,cells[\"300$b color\"].value)",
    "onError": "set-to-blank",
    "newColumnName": "300 $b",
    "columnInsertIndex": 59,
    "description": "Create column 300 $b at index 59 based on column 300$b sound using expression grel:if(isNonBlank(value), value + \", \" + cells[\"300$b color\"].value,cells[\"300$b color\"].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "300 $b",
    "expression": "grel:if(value==\"sound, \",\"sound\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 $b using expression grel:if(value==\"sound, \",\"sound\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Country",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "257",
    "columnInsertIndex": 9,
    "description": "Create column 257 at index 9 based on column Country using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Language",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "546 (language)",
    "columnInsertIndex": 35,
    "description": "Create column 546 (language) at index 35 based on column Language using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Also known as Title",
    "newColumnName": "246 13 (1)",
    "description": "Rename column Also known as Title to 246 13 (1)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Alternate Title",
    "newColumnName": "246 13 (2)",
    "description": "Rename column Alternate Title to 246 13 (2)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Edition statement",
    "expression": "grel:if(isNonBlank(value),\"[\"+value+\"]\",\"[Version held at Harvard Film Archive.]\")",
    "onError": "set-to-blank",
    "newColumnName": "250",
    "columnInsertIndex": 18,
    "description": "Create column 250 at index 18 based on column Edition statement using expression grel:if(isNonBlank(value),\"[\"+value+\"]\",\"[Version held at Harvard Film Archive.]\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Synopsis",
    "newColumnName": "520",
    "description": "Rename column Synopsis to 520"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Principal Cast",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "511 1_",
    "columnInsertIndex": 46,
    "description": "Create column 511 1_ at index 46 based on column Principal Cast using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Production Company",
    "expression": "grel:if(isNonBlank(value),value+\",\",value)",
    "onError": "set-to-blank",
    "newColumnName": "264 _1 $b",
    "columnInsertIndex": 50,
    "description": "Create column 264 _1 $b at index 50 based on column Production Company using expression grel:if(isNonBlank(value),value+\",\",value)"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Genre",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "maxColumns": 5,
    "description": "Split column Genre by separator"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Genre 1",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (1)",
    "columnInsertIndex": 27,
    "description": "Create column 655 _7 (1) at index 27 based on column Genre 1 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Genre 2",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (2)",
    "columnInsertIndex": 29,
    "description": "Create column 655 _7 (2) at index 29 based on column Genre 2 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Genre 3",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (3)",
    "columnInsertIndex": 31,
    "description": "Create column 655 _7 (3) at index 31 based on column Genre 3 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Genre 4",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (4)",
    "columnInsertIndex": 33,
    "description": "Create column 655 _7 (4) at index 33 based on column Genre 4 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Genre 5",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (5)",
    "columnInsertIndex": 35,
    "description": "Create column 655 _7 (5) at index 35 based on column Genre 5 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\", if (value==\"Adaptations\",\"Film adaptations.$2lcgft\", if (value==\"Adventure\",\"Action and adventure films.$2lcgft\", if (value==\"Advertisement\",\"Promotional films.$2lcgft\", if (value==\"Amateur\",\"Amateur films.$2lcgft\", if (value==\"Animation feature\",\"Animated films.$2lcgft\", if (value==\"Animation short\",\"Animated films.$2lcgft\", if (value==\"Animation\",\"Animated films.$2lcgft\", if (value==\"Anti-war\",\"War films.$2lcgft\", if (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\", if (value==\"Avant garde\",\"Experimental films.$2lcgft\", if (value==\"Biographical\",\"Biographical films.$2lcgft\", if (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\", if (value==\"Character Comedy\",\"Comedy films.$2lcgft\", if (value==\"Children's\",\"Children's films.$2lcgft\", if (value==\"Comedy drama\",\"Comedy films.$2lcgft\", if (value==\"Comedy\",\"Comedy films.$2lcgft\", if (value==\"Crime\",\"Crime films.$2lcgft\", if (value==\"Dance\",\"Dance films.$2lcgft\", if (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\", if (value==\"Documentary\",\"Documentary films.$2lcgft\", if (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Drama\",\"Fiction films.$2lcgft\", if (value==\"Educational\",\"Educational films.$2lcgft\", if (value==\"Erotica\",\"Erotic films.$2lcgft\", if (value==\"Essay\",\"Social problem films.$2lcgft\", if (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\", if (value==\"Excerpt\",\"Film excerpts.$2lcgft\", if (value==\"Experimental feature\",\"Experimental films.$2lcgft\", if (value==\"Experimental short\",\"Experimental films.$2lcgft\", if (value==\"Experimental\",\"Experimental films.$2lcgft\", if (value==\"Exploitation\",\"Exploitation films.$2lcgft\", if (value==\"Fantasy\",\"Fantasy films.$2lcgft\", if (value==\"Feature\",\"Feature films.$2lcgft\", if (value==\"Fiction feature\",\"Fiction films.$2lcgft\", if (value==\"Fiction short\",\"Fiction films.$2lcgft\", if (value==\"Fiction\",\"Fiction films.$2lcgft\", if (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\", if (value==\"Film noir\",\"Fim noir.$2lcgft\", if (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\", if (value==\"Historical drama\",\"Historical films.$2lcgft\", if (value==\"Home movie\",\"Amateur films.$2lcgft\", if (value==\"Horror\",\"Horror films.$2lcgft\", if (value==\"Independent\",\"Independent films.$2lcgft\", if (value==\"Industrial\",\"Industrial films.$2lcgft\", if (value==\"Instructional\",\"Instructional films.$2lcgft\", if (value==\"Kinescope\",\"Kinescope films.$2lcgft\", if (value==\"Martial arts\",\"Martial arts films.$2lcgft\", if (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\", if (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\", if (value==\"Music video\",\"Music videos.$2lcgft\", if (value==\"Musical\",\"Musical films.$2lcgft\", if (value==\"Newsreel\",\"Newsreels.$2lcgft\", if (value==\"Non fiction\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\", if (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\", if (value==\"Outtakes\",\"Outtakes.$2lcgft\", if (value==\"Pornography\",\"Pornographic films.$2lcgft\", if (value==\"Propaganda\",\"Propaganda films.$2lcgft\", if (value==\"Romance\",\"Romance films.$2lcgft\", if (value==\"Science fiction\",\"Science fiction films.$2lcgft\", if (value==\"Science\",\"Science films.$2lcgft\", if (value==\"Serial\",\"Film serials.$2lcgft\", if (value==\"Short\",\"Short films.$2lcgft\", if (value==\"Silent films\",\"Silent films.$2lcgft\", if (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\", if (value==\"Social critique\",\"Social problem films.$2lcgft\", if (value==\"Social guidance\",\"Social guidance films.$2lcgft\", if (value==\"Sponsored\",\"Sponsored films.$2lcgft\", if (value==\"Sports\",\"Sports films.$2lcgft\", if (value==\"Surreal\",\"Surrealist films.$2lcgft\", if (value==\"Surrealist films\",\"Surrealist films.$2lcgft\", if (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\", if (value==\"Trailer\",\"Film trailers.$2lcgft\", if (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\", if (value==\"War film\",\"War films.$2lcgft\", if (value==\"Western\",\"Western films.$2lcgft\", null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "HFA Format(s)",
    "newColumnName": "300 $c",
    "description": "Rename column HFA Format(s) to 300 $c"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "300 $a",
    "expression": "grel:value+\" :\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 $a using expression grel:value+\" :\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "300 $b",
    "expression": "grel:value+\" ;\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 $b using expression grel:value+\" ;\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "245",
    "expression": "grel:if(endsWith(value,\".\"),value,value+\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 245 using expression grel:if(endsWith(value,\".\"),value,value+\".\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "300 $c",
    "expression": "grel:\"two-dimensional moving image$btdi$2rdacontent\"",
    "onError": "set-to-blank",
    "newColumnName": "336",
    "columnInsertIndex": 37,
    "description": "Create column 336 at index 37 based on column 300 $c using expression grel:\"two-dimensional moving image$btdi$2rdacontent\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "336",
    "expression": "grel:\"projected$bg$2rdamedia\"",
    "onError": "set-to-blank",
    "newColumnName": "337",
    "columnInsertIndex": 38,
    "description": "Create column 337 at index 38 based on column 336 using expression grel:\"projected$bg$2rdamedia\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "337",
    "expression": "grel:\"film reel$bmr$2rdacarrier\"",
    "onError": "set-to-blank",
    "newColumnName": "338",
    "columnInsertIndex": 39,
    "description": "Create column 338 at index 39 based on column 337 using expression grel:\"film reel$bmr$2rdacarrier\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "035",
    "expression": "grel:\"HUL$beng$erda$cHUL\"",
    "onError": "set-to-blank",
    "newColumnName": "040",
    "columnInsertIndex": 47,
    "description": "Create column 040 at index 47 based on column 035 using expression grel:\"HUL$beng$erda$cHUL\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Year of Release",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "264 _1 $c",
    "columnInsertIndex": 79,
    "description": "Create column 264 _1 $c at index 79 based on column Year of Release using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Year of Release",
    "expression": "grel:if((length(value)==4),value,\"\")",
    "onError": "set-to-blank",
    "newColumnName": "008 year",
    "columnInsertIndex": 79,
    "description": "Create column 008 year at index 79 based on column Year of Release using expression grel:if((length(value)==4),value,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "008 year",
    "expression": "grel:if(isNonBlank(value),value,\"19uu\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 008 year using expression grel:if(isNonBlank(value),value,\"19uu\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "008 year",
    "expression": "grel:\"sYEAR####xx#RUN############muund#d\"",
    "onError": "set-to-blank",
    "newColumnName": "008",
    "columnInsertIndex": 80,
    "description": "Create column 008 at index 80 based on column 008 year using expression grel:\"sYEAR####xx#RUN############muund#d\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "008",
    "expression": "grel:value.replace(\"#\",\"\\\\\").replace(\"YEAR\",cells[\"008 year\"].value).replace(\"RUN\",cells[\"008 runtime\"].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 008 using expression grel:value.replace(\"#\",\"\\\\\").replace(\"YEAR\",cells[\"008 year\"].value).replace(\"RUN\",cells[\"008 runtime\"].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "008",
    "expression": "grel:(now().toDate(value).toString('YYMMdd'))+value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 008 using expression grel:(now().toDate(value).toString('YYMMdd'))+value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Item number",
    "expression": "grel:\"HFA Item no. \"+toNumber(value)",
    "onError": "set-to-blank",
    "newColumnName": "980",
    "columnInsertIndex": 46,
    "description": "Create column 980 at index 46 based on column Item number using expression grel:\"HFA Item no. \"+toNumber(value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "980",
    "expression": "grel:value+\".\"",
    "onError": "set-to-blank",
    "newColumnName": "500 (HFA item no.)",
    "columnInsertIndex": 47,
    "description": "Create column 500 (HFA item no.) at index 47 based on column 980 using expression grel:value+\".\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "980",
    "expression": "grel:\"Please consult Harvard Film Archive for restrictions on use.\"",
    "onError": "set-to-blank",
    "newColumnName": "981",
    "columnInsertIndex": 47,
    "description": "Create column 981 at index 47 based on column 980 using expression grel:\"Please consult Harvard Film Archive for restrictions on use.\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "008",
    "expression": "grel:\"00000ngm 2200000Ki 4500\"",
    "onError": "set-to-blank",
    "newColumnName": "LDR",
    "columnInsertIndex": 84,
    "description": "Create column LDR at index 84 based on column 008 using expression grel:\"00000ngm 2200000Ki 4500\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "655 _7 (5)",
    "expression": "grel:\"Motion pictures.$2lcgft\"",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (6)",
    "columnInsertIndex": 36,
    "description": "Create column 655 _7 (6) at index 36 based on column 655 _7 (5) using expression grel:\"Motion pictures.$2lcgft\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LDR",
    "expression": "grel:\"m$br$hu\"",
    "onError": "set-to-blank",
    "newColumnName": "007",
    "columnInsertIndex": 86,
    "description": "Create column 007 at index 86 based on column LDR using expression grel:\"m$br$hu\""
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "LDR",
      "007",
      "008",
      "035",
      "040",
      "245",
      "246 13 (1)",
      "246 13 (2)",
      "250",
      "257",
      "264 _1 $b",
      "264 _1 $c",
      "300 $a",
      "300 $b",
      "300 $c",
      "336",
      "337",
      "338",
      "344",
      "500 (aspect ratio)",
      "500 (generation)",
      "500 (runtime)",
      "500 (HFA item no.)",
      "508 (director)",
      "508 (director 2)",
      "508 (editor)",
      "508 (DP)",
      "508 (script)",
      "508 (music)",
      "508 (producer)",
      "511 1_",
      "520",
      "546 (language)",
      "546 (subtitles)",
      "655 _7 (1)",
      "655 _7 (2)",
      "655 _7 (3)",
      "655 _7 (4)",
      "655 _7 (5)",
      "655 _7 (6)",
      "740",
      "980",
      "981",
      "Edition statement",
      "300$b color",
      "Element",
      "Footage Length",
      "300 footage",
      "Format type",
      "Genre 1",
      "DP/Cinematographer",
      "Genre 2",
      "Genre 3",
      "Date of record creation",
      "B/W-Color",
      "Country",
      "Genre 4",
      "Genre 5",
      "HFA Time",
      "Unified running time",
      "Collection Title",
      "Director 2",
      "300 runtime",
      "008 runtime",
      "HOLLIS record created by S. Pierce",
      "Item number",
      "Language",
      "LOC Authority Subject Headings",
      "Aspect Ratio",
      "Music",
      "Needs new HOLLIS update",
      "Original Titles",
      "prefix",
      "preliminary Aleph record",
      "Principal Cast",
      "Problem with record  for HOLLIS export",
      "Producer",
      "Production Company",
      "Reels",
      "300 reels",
      "Running Time {Length}",
      "Director",
      "Script",
      "Sound Aspect(s)",
      "Subtitles",
      "Editor",
      "300$b sound",
      "Year of Release",
      "008 year"
    ],
    "description": "Reorder columns"
  }
]
