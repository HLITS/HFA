[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u000b\",\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u000b\",\"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\u001d\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\u001d\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HOLLIS record created by S. Pierce",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HOLLIS record created by S. Pierce using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\t\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\t\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\t\",\" \")"
  }
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.replace(\"\u000b\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.replace(\"\u000b\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Also known as Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Also known as Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Aspect Ratio",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Aspect Ratio using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Alternate Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Collection Title",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Collection Title using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date of record creation",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date of record creation using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Director 2",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Director 2 using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DP/Cinematographer",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DP/Cinematographer using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Edition statement",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Edition statement using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Element",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Element using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Editor",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Editor using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Footage Length",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Footage Length using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Genre using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "B/W-Color",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column B/W-Color using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Format(s)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Format(s) using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Item number",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Item number using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Format type",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format type using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Original Titles",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Original Titles using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Needs new HOLLIS update",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Needs new HOLLIS update using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "HFA Time",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HFA Time using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Music",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Music using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "LOC Authority Subject Headings",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LOC Authority Subject Headings using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Problem with record  for HOLLIS export",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Problem with record  for HOLLIS export using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "preliminary Aleph record",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column preliminary Aleph record using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "prefix",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column prefix using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Running Time {Length}",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Running Time {Length} using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Reels",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Reels using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Production Company",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Production Company using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Producer",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Producer using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Year of Release",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year of Release using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Synopsis",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Synopsis using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subtitles",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subtitles using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sound Aspect(s)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sound Aspect(s) using expression grel:value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Script",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Script using expression grel:value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Original Titles",
    "expression": "grel:if(isNonBlank(cells[\"prefix\"].value),(cells[\"prefix\"].value)+\" \"+value,value)",
    "onError": "set-to-blank",
    "newColumnName": "245",
    "columnInsertIndex": 25,
    "description": "Create column 245 at index 25 based on column Original Titles using expression grel:if(isNonBlank(cells[\"prefix\"].value),(cells[\"prefix\"].value)+\" \"+value,value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Aspect Ratio",
    "expression": "grel:if(isNonBlank(value),\"Aspect ratio: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "500 (aspect ratio)",
    "columnInsertIndex": 3,
    "description": "Create column 500 (aspect ratio) at index 3 based on column Aspect Ratio using expression grel:if(isNonBlank(value),\"Aspect ratio: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Director",
    "expression": "grel:if(isNonBlank(value),\"Director of film, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (director)",
    "columnInsertIndex": 9,
    "description": "Create column 508 (director) at index 9 based on column Director using expression grel:if(isNonBlank(value),\"Director of film, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Director 2",
    "expression": "grel:if(isNonBlank(value),\"Director of film, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (director 2)",
    "columnInsertIndex": 11,
    "description": "Create column 508 (director 2) at index 11 based on column Director 2 using expression grel:if(isNonBlank(value),\"Director of film, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "DP/Cinematographer",
    "expression": "grel:if(isNonBlank(value),\"Director of photography, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (DP)",
    "columnInsertIndex": 13,
    "description": "Create column 508 (DP) at index 13 based on column DP/Cinematographer using expression grel:if(isNonBlank(value),\"Director of photography, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Editor",
    "expression": "grel:if(isNonBlank(value),\"Editor, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (editor)",
    "columnInsertIndex": 16,
    "description": "Create column 508 (editor) at index 16 based on column Editor using expression grel:if(isNonBlank(value),\"Editor, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Element",
    "expression": "grel:if(isNonBlank(value),\"Generation: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "500 (generation)",
    "columnInsertIndex": 18,
    "description": "Create column 500 (generation) at index 18 based on column Element using expression grel:if(isNonBlank(value),\"Generation: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Music",
    "expression": "grel:if(isNonBlank(value),\"Music score, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (music)",
    "columnInsertIndex": 29,
    "description": "Create column 508 (music) at index 29 based on column Music using expression grel:if(isNonBlank(value),\"Music score, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Producer",
    "expression": "grel:if(isNonBlank(value),\"Producer, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (producer)",
    "columnInsertIndex": 40,
    "description": "Create column 508 (producer) at index 40 based on column Producer using expression grel:if(isNonBlank(value),\"Producer, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Script",
    "expression": "grel:if(isNonBlank(value),\"Screenwriter, \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "508 (script)",
    "columnInsertIndex": 45,
    "description": "Create column 508 (script) at index 45 based on column Script using expression grel:if(isNonBlank(value),\"Screenwriter, \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Subtitles",
    "expression": "grel:if(isNonBlank(value),\"Subtitles: \"+value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "546 (subtitles)",
    "columnInsertIndex": 48,
    "description": "Create column 546 (subtitles) at index 48 based on column Subtitles using expression grel:if(isNonBlank(value),\"Subtitles: \"+value+\".\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sound Aspect(s)",
    "expression": "grel:if((not(value.contains(\"Silent\"))),\"analog$2rdatr\",value)",
    "onError": "set-to-blank",
    "newColumnName": "344",
    "columnInsertIndex": 47,
    "description": "Create column 344 at index 47 based on column Sound Aspect(s) using expression grel:if((not(value.contains(\"Silent\"))),\"analog$2rdatr\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Running Time {Length}",
    "expression": "grel:\"000\"[0,3-value.length()]+value",
    "onError": "set-to-blank",
    "newColumnName": "008 runtime",
    "columnInsertIndex": 44,
    "description": "Create column 008 runtime at index 44 based on column Running Time {Length} using expression grel:\"000\"[0,3-value.length()]+value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "008 runtime",
    "expression": "grel:if(isBlank(value),\"---\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 008 runtime using expression grel:if(isBlank(value),\"---\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Reels",
    "expression": "grel:if(isNonBlank(value),value+\" \",\"\")+\"film reels\"",
    "onError": "set-to-blank",
    "newColumnName": "300 reels",
    "columnInsertIndex": 43,
    "description": "Create column 300 reels at index 43 based on column Reels using expression grel:if(isNonBlank(value),value+\" \",\"\")+\"film reels\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "300 reels",
    "expression": "grel:value.replace(\"1 film reels\",\"1 film reel\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300 reels using expression grel:value.replace(\"1 film reels\",\"1 film reel\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Running Time {Length}",
    "expression": "grel:if(isNonBlank(value),value+\" minutes\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300 runtime",
    "columnInsertIndex": 45,
    "description": "Create column 300 runtime at index 45 based on column Running Time {Length} using expression grel:if(isNonBlank(value),value+\" minutes\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Footage Length",
    "expression": "grel:if(isNonBlank(value),value+\" feet\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300 footage",
    "columnInsertIndex": 20,
    "description": "Create column 300 footage at index 20 based on column Footage Length using expression grel:if(isNonBlank(value),value+\" feet\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "300 reels",
    "expression": "grel:value+\" (\"+if(isNonBlank(cells[\"300 runtime\"].value),cells[\"300 runtime\"].value,\"\")+\", \"+if(isNonBlank(cells[\"300 footage\"].value),cells[\"300 footage\"].value,\"\")+\")\"",
    "onError": "set-to-blank",
    "newColumnName": "300$a",
    "columnInsertIndex": 45,
    "description": "Create column 300$a at index 45 based on column 300 reels using expression grel:value+\" (\"+if(isNonBlank(cells[\"300 runtime\"].value),cells[\"300 runtime\"].value,\"\")+\", \"+if(isNonBlank(cells[\"300 footage\"].value),cells[\"300 footage\"].value,\"\")+\")\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "300$a",
    "expression": "grel:value.replace(\"(, )\",\"\").replace(\"(, \",\"(\").replace(\", )\",\")\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300$a using expression grel:value.replace(\"(, )\",\"\").replace(\"(, \",\"(\").replace(\", )\",\")\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "HFA Time",
    "expression": "grel:if(isNonBlank(value),\"Harvard Film Archive running time: \"+value+\" minutes.\",value)",
    "onError": "set-to-blank",
    "newColumnName": "500 (HFA time)",
    "columnInsertIndex": 25,
    "description": "Create column 500 (HFA time) at index 25 based on column HFA Time using expression grel:if(isNonBlank(value),\"Harvard Film Archive running time: \"+value+\" minutes.\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Item number",
    "expression": "grel:\"(HFAfm)\"+value",
    "onError": "set-to-blank",
    "newColumnName": "035",
    "columnInsertIndex": 28,
    "description": "Create column 035 at index 28 based on column Item number using expression grel:\"(HFAfm)\"+value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Collection Title",
    "expression": "grel:if(isNonBlank(value),value+\".$5hfa\",value)",
    "onError": "set-to-blank",
    "newColumnName": "740",
    "columnInsertIndex": 6,
    "description": "Create column 740 at index 6 based on column Collection Title using expression grel:if(isNonBlank(value),value+\".$5hfa\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "344",
    "expression": "grel:value.replace(\"Silent\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 344 using expression grel:value.replace(\"Silent\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "344",
    "expression": "grel:if(isNonBlank(value),\"sound\",value)",
    "onError": "set-to-blank",
    "newColumnName": "300$b sound",
    "columnInsertIndex": 56,
    "description": "Create column 300$b sound at index 56 based on column 344 using expression grel:if(isNonBlank(value),\"sound\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "B/W-Color",
    "expression": "grel:if(value.contains(\"olor\"),\"color\",if(value.contains(\"B/W\"),\"black and white\",\"\"))",
    "onError": "set-to-blank",
    "newColumnName": "300$b color",
    "columnInsertIndex": 5,
    "description": "Create column 300$b color at index 5 based on column B/W-Color using expression grel:if(value.contains(\"olor\"),\"color\",if(value.contains(\"B/W\"),\"black and white\",\"\"))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "300$b sound",
    "expression": "grel:if(isNonBlank(value), value + \", \" + cells[\"300$b color\"].value,cells[\"300$b color\"].value)",
    "onError": "set-to-blank",
    "newColumnName": "300$b",
    "columnInsertIndex": 58,
    "description": "Create column 300$b at index 58 based on column 300$b sound using expression grel:if(isNonBlank(value), value + \", \" + cells[\"300$b color\"].value,cells[\"300$b color\"].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "300$b",
    "expression": "grel:if(value==\"sound, \",\"sound\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300$b using expression grel:if(value==\"sound, \",\"sound\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Country",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Country using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Country",
    "newColumnName": "257",
    "description": "Rename column Country to 257"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Language",
    "newColumnName": "546 (language)",
    "description": "Rename column Language to 546 (language)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Also known as Title",
    "newColumnName": "246 13 (1)",
    "description": "Rename column Also known as Title to 246 13 (1)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Alternate Title",
    "newColumnName": "246 13 (2)",
    "description": "Rename column Alternate Title to 246 13 (2)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Edition statement",
    "expression": "grel:if(isNonBlank(value),value,\"[Version held at Harvard Film Archive.]\")",
    "onError": "set-to-blank",
    "newColumnName": "250",
    "columnInsertIndex": 17,
    "description": "Create column 250 at index 17 based on column Edition statement using expression grel:if(isNonBlank(value),value,\"[Version held at Harvard Film Archive.]\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Synopsis",
    "newColumnName": "520",
    "description": "Rename column Synopsis to 520"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Principal Cast",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Principal Cast using expression grel:if(isNonBlank(value),value+\".\",value)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Principal Cast",
    "newColumnName": "511 1_",
    "description": "Rename column Principal Cast to 511 1_"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Production Company",
    "newColumnName": "264 _2 $b",
    "description": "Rename column Production Company to 264 _2 $b"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "264 _2 $b",
    "expression": "grel:if(isNonBlank(value),value+\",\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 264 _2 $b using expression grel:if(isNonBlank(value),value+\",\",value)"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Genre",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "maxColumns": 5,
    "description": "Split column Genre by separator"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Genre 1",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (1)",
    "columnInsertIndex": 26,
    "description": "Create column 655 _7 (1) at index 26 based on column Genre 1 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Genre 2",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (2)",
    "columnInsertIndex": 28,
    "description": "Create column 655 _7 (2) at index 28 based on column Genre 2 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Genre 3",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (3)",
    "columnInsertIndex": 30,
    "description": "Create column 655 _7 (3) at index 30 based on column Genre 3 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Genre 4",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (4)",
    "columnInsertIndex": 32,
    "description": "Create column 655 _7 (4) at index 32 based on column Genre 4 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Genre 5",
    "expression": "grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
    "onError": "set-to-blank",
    "newColumnName": "655 _7 (5)",
    "columnInsertIndex": 34,
    "description": "Create column 655 _7 (5) at index 34 based on column Genre 5 using expression grel:if (value==\"Action\",\"Action and adventure films.$2lcgft\",\nif (value==\"Adaptations\",\"Film adaptations.$2lcgft\",\nif (value==\"Adventure\",\"Action and adventure films.$2lcgft\",\nif (value==\"Advertisement\",\"Promotional films.$2lcgft\",\nif (value==\"Amateur\",\"Amateur films.$2lcgft\",\nif (value==\"Animation feature\",\"Animated films.$2lcgft\",\nif (value==\"Animation short\",\"Animated films.$2lcgft\",\nif (value==\"Animation\",\"Animated films.$2lcgft\",\nif (value==\"Anti-war\",\"War films.$2lcgft\",\nif (value==\"Autobiographical\",\"Autobiographical films.$2lcgft\",\nif (value==\"Avant garde\",\"Experimental films.$2lcgft\",\nif (value==\"Biographical\",\"Biographical films.$2lcgft\",\nif (value==\"Cameraless\",\"Cameraless animation films.$2lcgft\",\nif (value==\"Character Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Children's\",\"Children's films.$2lcgft\",\nif (value==\"Comedy drama\",\"Comedy films.$2lcgft\",\nif (value==\"Comedy\",\"Comedy films.$2lcgft\",\nif (value==\"Crime\",\"Crime films.$2lcgft\",\nif (value==\"Dance\",\"Dance films.$2lcgft\",\nif (value==\"Detective and mystery\",\"Detective and mystery films.$2lcgft\",\nif (value==\"Documentary\",\"Documentary films.$2lcgft\",\nif (value==\"Drama fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Drama\",\"Fiction films.$2lcgft\",\nif (value==\"Educational\",\"Educational films.$2lcgft\",\nif (value==\"Erotica\",\"Erotic films.$2lcgft\",\nif (value==\"Essay\",\"Social problem films.$2lcgft\",\nif (value==\"Ethnographic\",\"Ethnographic films.$2lcgft\",\nif (value==\"Excerpt\",\"Film excerpts.$2lcgft\",\nif (value==\"Experimental feature\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental short\",\"Experimental films.$2lcgft\",\nif (value==\"Experimental\",\"Experimental films.$2lcgft\",\nif (value==\"Exploitation\",\"Exploitation films.$2lcgft\",\nif (value==\"Fantasy\",\"Fantasy films.$2lcgft\",\nif (value==\"Feature\",\"Feature films.$2lcgft\",\nif (value==\"Fiction feature\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction short\",\"Fiction films.$2lcgft\",\nif (value==\"Fiction\",\"Fiction films.$2lcgft\",\nif (value==\"Film Excerpts\",\"Film excerpts.$2lcgft\",\nif (value==\"Film noir\",\"Fim noir.$2lcgft\",\nif (value==\"Historical Comedy Adventure\",\"Historical films.$2lcgft\",\nif (value==\"Historical drama\",\"Historical films.$2lcgft\",\nif (value==\"Home movie\",\"Amateur films.$2lcgft\",\nif (value==\"Horror\",\"Horror films.$2lcgft\",\nif (value==\"Independent\",\"Independent films.$2lcgft\",\nif (value==\"Industrial\",\"Industrial films.$2lcgft\",\nif (value==\"Instructional\",\"Instructional films.$2lcgft\",\nif (value==\"Kinescope\",\"Kinescope films.$2lcgft\",\nif (value==\"Martial arts\",\"Martial arts films.$2lcgft\",\nif (value==\"Medical (non-fiction)\",\"Medical films (Motion pictures).$2lcgft\",\nif (value==\"Melodrama\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Melodramas\",\"Melodramas (Motion pictures).$2lcgft\",\nif (value==\"Music video\",\"Music videos.$2lcgft\",\nif (value==\"Musical\",\"Musical films.$2lcgft\",\nif (value==\"Newsreel\",\"Newsreels.$2lcgft\",\nif (value==\"Non fiction\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction feature\",\"Nonfiction films.$2lcgft\",\nif (value==\"Nonfiction short\",\"Nonfiction films.$2lcgft\",\nif (value==\"Outtakes\",\"Outtakes.$2lcgft\",\nif (value==\"Pornography\",\"Pornographic films.$2lcgft\",\nif (value==\"Propaganda\",\"Propaganda films.$2lcgft\",\nif (value==\"Romance\",\"Romance films.$2lcgft\",\nif (value==\"Science fiction\",\"Science fiction films.$2lcgft\",\nif (value==\"Science\",\"Science films.$2lcgft\",\nif (value==\"Serial\",\"Film serials.$2lcgft\",\nif (value==\"Short\",\"Short films.$2lcgft\",\nif (value==\"Silent films\",\"Silent films.$2lcgft\",\nif (value==\"Snipe\",\"Theater announcements (Motion pictures).$2lcgft\",\nif (value==\"Social critique\",\"Social problem films.$2lcgft\",\nif (value==\"Social guidance\",\"Social guidance films.$2lcgft\",\nif (value==\"Sponsored\",\"Sponsored films.$2lcgft\",\nif (value==\"Sports\",\"Sports films.$2lcgft\",\nif (value==\"Surreal\",\"Surrealist films.$2lcgft\",\nif (value==\"Surrealist films\",\"Surrealist films.$2lcgft\",\nif (value==\"Suspense\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Thriller\",\"Thrillers (Motion pictures).$2lcgft\",\nif (value==\"Trailer\",\"Film trailers.$2lcgft\",\nif (value==\"Travelogues\",\"Travelogues (Motion pictures).$2lcgft\",\nif (value==\"War film\",\"War films.$2lcgft\",\nif (value==\"Western\",\"Western films.$2lcgft\",    \nnull))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "HFA Format(s)",
    "newColumnName": "300 $c",
    "description": "Rename column HFA Format(s) to 300 $c"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "300$b",
    "expression": "grel:value+\" ;\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300$b using expression grel:value+\" ;\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "300$a",
    "expression": "grel:value+\" :\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 300$a using expression grel:value+\" :\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "245",
    "expression": "grel:if(endsWith(value,\".\"),value,value+\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 245 using expression grel:if(endsWith(value,\".\"),value,value+\".\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "300 $c",
    "expression": "grel:\"two-dimensional moving image$btdi$2rdacontent\"",
    "onError": "set-to-blank",
    "newColumnName": "336",
    "columnInsertIndex": 12,
    "description": "Create column 336 at index 12 based on column 300 $c using expression grel:\"two-dimensional moving image$btdi$2rdacontent\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "336",
    "expression": "grel:\"projected$bg$2rdamedia\"",
    "onError": "set-to-blank",
    "newColumnName": "337",
    "columnInsertIndex": 13,
    "description": "Create column 337 at index 13 based on column 336 using expression grel:\"projected$bg$2rdamedia\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "337",
    "expression": "grel:\"film reel$bmr$2rdacarrier\"",
    "onError": "set-to-blank",
    "newColumnName": "338",
    "columnInsertIndex": 14,
    "description": "Create column 338 at index 14 based on column 337 using expression grel:\"film reel$bmr$2rdacarrier\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "035",
    "expression": "grel:\"HFA$beng$erda$cHFA\"",
    "onError": "set-to-blank",
    "newColumnName": "040",
    "columnInsertIndex": 2,
    "description": "Create column 040 at index 2 based on column 035 using expression grel:\"HFA$beng$erda$cHFA\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Year of Release",
    "expression": "grel:if(isNonBlank(value),value+\".\",value)",
    "onError": "set-to-blank",
    "newColumnName": "264 _2 $c",
    "columnInsertIndex": 74,
    "description": "Create column 264 _2 $c at index 74 based on column Year of Release using expression grel:if(isNonBlank(value),value+\".\",value)"
  }
]
